<?php
/**
 * User: XueSi
 * Date: 2021/4/23 16:19
 * Author: XueSi <1592328848@qq.com>
 */

namespace EasySwoole\WeChat\Tests\OpenPlatform\Auth;

use EasySwoole\WeChat\Kernel\Cache\FileCacheDriver;
use EasySwoole\WeChat\Kernel\Exceptions\RuntimeException;
use EasySwoole\WeChat\Kernel\ServiceContainer;
use EasySwoole\WeChat\Kernel\ServiceProviders;
use EasySwoole\WeChat\OpenPlatform\Application;
use EasySwoole\WeChat\OpenPlatform\Auth\VerifyTicket;
use EasySwoole\WeChat\Tests\TestCase;
use Psr\SimpleCache\CacheInterface;

class VerifyTicketTest extends TestCase
{
    /** @var CacheInterface */
    protected $fileCache;

    public function setUp(): void
    {
        $this->fileCache = new FileCacheDriver(dirname(dirname(dirname(__DIR__))) . '/Tmp');
        parent::setUp(); // TODO: Change the autogenerated stub
    }

    public function testSetTicket()
    {
        $app = new Application([
            'appId' => 'mock_appId'
        ]);

        $app->rebind(ServiceProviders::Cache, $this->fileCache);

        /** @var FileCacheDriver $cache */
        $cache = $app[ServiceProviders::Cache];

        $cacheKey = 'easyswoole_wechat_verify_ticket_mock_appId';

        $verifyTicket = new VerifyTicket($app);

        $this->assertInstanceOf(VerifyTicket::class, $verifyTicket->setTicket('ticket@123456'));
        $this->assertTrue($cache->has($cacheKey));

        $this->expectException(RuntimeException::class);
        $this->expectExceptionMessage('Failed to cache verify ticket.');
        $verifyTicket->setTicket('ticket@123456', 0);
    }

    public function testGetTicket()
    {
        $app = new Application([
            'appId' => 'mock_appId'
        ]);

        $app->rebind(ServiceProviders::Cache, $this->fileCache);

        $verifyTicket = new VerifyTicket($app);

        $this->assertInstanceOf(VerifyTicket::class, $verifyTicket->setTicket('ticket@123456'));

        $this->assertSame('ticket@123456', $verifyTicket->getTicket());
    }

    public function testGetTicketAndThrowException()
    {
        $app = new Application([
            'appId' => 'mock_appId'
        ]);

        $app->rebind(ServiceProviders::Cache, $this->fileCache);

        $verifyTicket = new VerifyTicket($app);

        $verifyTicket->setTicket('');

        $this->expectException('EasySwoole\WeChat\Kernel\Exceptions\RuntimeException');

        $this->expectExceptionMessage('Credential "component_verify_ticket" does not exist in cache.');

        $verifyTicket->getTicket();
    }
}
